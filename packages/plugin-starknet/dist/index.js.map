{"version":3,"sources":["../src/actions/transfer.ts","../src/utils/index.ts","../src/utils/ERC20Token.ts","../src/utils/erc20.json","../src/environment.ts","../src/actions/unruggable.ts","../src/index.ts"],"sourcesContent":["// TODO: Implement this for Starknet.\n// It should just transfer tokens from the agent's wallet to the recipient.\n\nimport {\n    type Action,\n    ActionExample,\n    composeContext,\n    Content,\n    elizaLogger,\n    generateObjectDeprecated,\n    HandlerCallback,\n    IAgentRuntime,\n    Memory,\n    ModelClass,\n    State,\n} from \"@ai16z/eliza\";\nimport { getStarknetAccount } from \"../utils\";\nimport { ERC20Token } from \"../utils/ERC20Token\";\nimport { validateStarknetConfig } from \"../environment\";\nimport { getAddressFromName, isStarkDomain } from \"../utils/starknetId\";\n\nexport interface TransferContent extends Content {\n    tokenAddress: string;\n    recipient?: string;\n    // starkName?: string;\n    amount: string | number;\n}\n\nexport function isTransferContent(\n    content: TransferContent\n): content is TransferContent {\n    // Validate types\n    const validTypes =\n        typeof content.tokenAddress === \"string\" &&\n        (typeof content.recipient === \"string\") &&\n        (typeof content.amount === \"string\" ||\n            typeof content.amount === \"number\");\n    if (!validTypes) {\n        return false;\n    }\n\n    // Validate tokenAddress (must be 32-bytes long with 0x prefix)\n    const validTokenAddress =\n        content.tokenAddress.startsWith(\"0x\") &&\n        content.tokenAddress.length === 66;\n    if (!validTokenAddress) {\n        return false;\n    }\n\n    // Additional checks based on whether recipient or starkName is defined\n    if (content.recipient) {\n        // Validate recipient address (must be 32-bytes long with 0x prefix)\n        const validRecipient =\n            content.recipient.startsWith(\"0x\") &&\n            content.recipient.length === 66;\n        if (!validRecipient) {\n            return false;\n        }\n    }\n    // } else if (content.starkName) {\n    //     // .stark name validation\n    //     const validStarkName = isStarkDomain(content.starkName);\n    //     if (!validStarkName) {\n    //         return false;\n    //     }\n    // }\n\n    return true;\n}\n\nconst transferTemplate = `Respond with a JSON markdown block containing only the extracted values. Use null for any values that cannot be determined.\n\nFor the amount to send, use a value from 0.0001 - 100. Determine this based on your judgement of the recipient.\n\nthese are known addresses, if you get asked about them, use these:\n- BTC/btc: 0x03fe2b97c1fd336e750087d68b9b867997fd64a2661ff3ca5a7c771641e8e7ac\n- ETH/eth: 0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\n- STRK/strk: 0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\n- LORDS/lords: 0x0124aeb495b947201f5fac96fd1138e326ad86195b98df6dec9009158a533b49\n\nExample response:\n\\`\\`\\`json\n{\n    \"tokenAddress\": \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\",\n    \"recipient\": \"0x008AD72dbC9e1d5feBdd8786F7D3C3e8B5dC3DaaD28cfaE0D8A055BB9463636C\",\n    \"amount\": \"1\"\n}\n\\`\\`\\`\n\n{{recentMessages}}\n\nGiven the recent messages, extract the following information about the requested token transfer:\n- Token contract address\n- Recipient wallet address\n- Amount to transfer\n\n\nRespond with a JSON markdown block containing only the extracted values.`;\n\nexport default {\n    name: \"SEND_TOKEN\",\n    similes: [\n        \"TRANSFER_TOKEN_ON_STARKNET\",\n        \"TRANSFER_TOKENS_ON_STARKNET\",\n        \"SEND_TOKENS_ON_STARKNET\",\n        \"SEND_ETH_ON_STARKNET\",\n        \"PAY_ON_STARKNET\",\n    ],\n    validate: async (runtime: IAgentRuntime, _message: Memory) => {\n        await validateStarknetConfig(runtime);\n        return true;\n    },\n    description:\n        \"MUST use this action if the user requests send a token or transfer a token, the request might be varied, but it will always be a token transfer. If the user requests a transfer of strk, use this action.\",\n    handler: async (\n        runtime: IAgentRuntime,\n        message: Memory,\n        state: State,\n        _options: { [key: string]: unknown },\n        callback?: HandlerCallback\n    ): Promise<boolean> => {\n        elizaLogger.log(\"Starting SEND_TOKEN handler...\");\n\n        // Initialize or update state\n        if (!state) {\n            state = (await runtime.composeState(message)) as State;\n        } else {\n            state = await runtime.updateRecentMessageState(state);\n        }\n\n        // Compose transfer context\n        const transferContext = composeContext({\n            state,\n            template: transferTemplate,\n        });\n\n        // Generate transfer content\n        const content = await generateObjectDeprecated({\n            runtime,\n            context: transferContext,\n            modelClass: ModelClass.MEDIUM,\n        });\n        console.log(\"ðŸš€ ~ content:\", content)\n\n        elizaLogger.debug(\"Transfer content:\", content);\n        console.log(\"ðŸš€ ~ eliza content:\", elizaLogger.debug(\"Transfer content:\", content));\n\n\n        // Validate transfer content\n        // if (!isTransferContent(content)) {\n        //     elizaLogger.error(\"Invalid content for TRANSFER_TOKEN action.\");\n        //     if (callback) {\n        //         callback({\n        //             text: \"Not enough information to transfer tokens. Please respond with token address, recipient address or stark name, and amount.\",\n        //             content: { error: \"Invalid transfer content\" },\n        //         });\n        //     }\n        //     return false;\n        // }\n\n        try {\n            const account = getStarknetAccount(runtime);\n            console.log(\"ðŸš€ ~ account:\", account)\n            const erc20Token = new ERC20Token(content.tokenAddress, account);\n            console.log(\"ðŸš€ ~ erc20Token:\", erc20Token)\n            const decimals = await erc20Token.decimals();\n            console.log(\"ðŸš€ ~ decimals:\", decimals)\n            // Convert decimal amount to integer before converting to BigInt\n            const amountInteger = Math.floor(\n                Number(content.amount) * Math.pow(10, Number(decimals))\n            );\n            console.log(\"ðŸš€ ~ amountInteger:\", amountInteger)\n            const amountWei = BigInt(amountInteger.toString());\n            console.log(\"ðŸš€ ~ amountWei:\", amountWei)\n            const recipient = content.recipient;\n            console.log(\"ðŸš€ ~ recipient:\", recipient)\n            const transferCall = erc20Token.transferCall(recipient, amountWei);\n            console.log(\"ðŸš€ ~ transferCall:\", transferCall)\n\n            elizaLogger.success(\n                \"Transferring\",\n                amountWei,\n                \"of\",\n                content.tokenAddress,\n                \"to\",\n                recipient\n            );\n\n            const tx = await account.execute(transferCall);\n\n            elizaLogger.success(\n                \"Transfer completed successfully! tx: \" + tx.transaction_hash\n            );\n            if (callback) {\n                callback({\n                    text:\n                        \"Transfer completed successfully! tx: \" +\n                        tx.transaction_hash,\n                    content: {},\n                });\n            }\n\n            return true;\n        } catch (error) {\n            elizaLogger.error(\"Error during token transfer:\", error);\n            if (callback) {\n                callback({\n                    text: `Error transferring tokens: ${error.message}`,\n                    content: { error: error.message },\n                });\n            }\n            return false;\n        }\n    },\n\n    examples: [\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Send 0.00001 ETH to 0x008AD72dbC9e1d5feBdd8786F7D3C3e8B5dC3DaaD28cfaE0D8A055BB9463636C\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"I'll transfer 0.00001 ETH to that address right away. Let me process that for you.\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Send 0.00001 ETH to domain.stark\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"I'll transfer 0.00001 ETH to domain.stark at address 0x0124aeb495b947201f5fac96fd1138e326ad86195b98df6dec9009158a533b49 right away. Let me process that for you.\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Can you transfer 1 STRK tokens to 0x008AD72dbC9e1d5feBdd8786F7D3C3e8B5dC3DaaD28cfaE0D8A055BB9463636C?\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Executing transfer of 1 STRK tokens to the specified address. One moment please.\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Can you transfer 50 LORDS tokens to domain.stark?\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Executing transfer of 50 LORDS tokens to domain.stark at address 0x0124aeb495b947201f5fac96fd1138e326ad86195b98df6dec9009158a533b49. One moment please.\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Please send 0.5 BTC to 0x008AD72dbC9e1d5feBdd8786F7D3C3e8B5dC3DaaD28cfaE0D8A055BB9463636C\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Got it, initiating transfer of 0.5 BTC to the provided address. I'll confirm once it's complete.\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Please send 0.5 BTC to domain.stark\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Got it, initiating transfer of 0.5 BTC to domain.stark at address 0x03fe2b97c1fd336e750087d68b9b867997fd64a2661ff3ca5a7c771641e8e7ac. I'll confirm once it's complete.\",\n                },\n            },\n        ],\n    ] as ActionExample[][],\n} as Action;\n","import { elizaLogger, IAgentRuntime } from \"@ai16z/eliza\";\nimport { Fraction, Percent } from \"@uniswap/sdk-core\";\nimport { Account, Contract, RpcProvider } from \"starknet\";\n\nexport const getTokenBalance = async (\n    runtime: IAgentRuntime,\n    tokenAddress: string\n) => {\n    const provider = getStarknetProvider(runtime);\n\n    const { abi: tokenAbi } = await provider.getClassAt(tokenAddress);\n    if (tokenAbi === undefined) {\n        throw new Error(\"no abi.\");\n    }\n\n    const tokenContract = new Contract(tokenAbi, tokenAddress, provider);\n\n    tokenContract.connect(getStarknetAccount(runtime));\n\n    return await tokenContract.balanceOf(tokenAddress);\n};\n\nexport const getStarknetProvider = (runtime: IAgentRuntime) => {\n    return new RpcProvider({\n        nodeUrl: runtime.getSetting(\"STARKNET_RPC_URL\"),\n    });\n};\n\nexport const getStarknetAccount = (runtime: IAgentRuntime) => {\n    return new Account(\n        getStarknetProvider(runtime),\n        runtime.getSetting(\"STARKNET_ADDRESS\"),\n        runtime.getSetting(\"STARKNET_PRIVATE_KEY\")\n    );\n};\n\nexport const getPercent = (amount: string | number, decimals: number) => {\n    return new Percent(amount, decimals);\n};\n\nexport const parseFormatedAmount = (amount: string) => amount.replace(/,/g, \"\");\n\nexport const PERCENTAGE_INPUT_PRECISION = 2;\n\nexport const parseFormatedPercentage = (percent: string) =>\n    new Percent(\n        +percent * 10 ** PERCENTAGE_INPUT_PRECISION,\n        100 * 10 ** PERCENTAGE_INPUT_PRECISION\n    );\n\ninterface ParseCurrencyAmountOptions {\n    fixed: number;\n    significant?: number;\n}\n\nexport const formatCurrenyAmount = (\n    amount: Fraction,\n    { fixed, significant = 1 }: ParseCurrencyAmountOptions\n) => {\n    const fixedAmount = amount.toFixed(fixed);\n    const significantAmount = amount.toSignificant(significant);\n\n    if (+significantAmount > +fixedAmount) return significantAmount;\n    else return +fixedAmount.toString();\n};\n\nexport const formatPercentage = (percentage: Percent) => {\n    const formatedPercentage = +percentage.toFixed(2);\n    const exact = percentage.equalTo(\n        new Percent(Math.round(formatedPercentage * 100), 10000)\n    );\n\n    return `${exact ? \"\" : \"~\"}${formatedPercentage}%`;\n};\n\nexport type RetryConfig = {\n    maxRetries?: number;\n    delay?: number;\n    maxDelay?: number;\n    backoff?: (retryCount: number, delay: number, maxDelay: number) => number;\n};\n\nexport async function fetchWithRetry<T>(\n    url: string,\n    options?: RequestInit,\n    config: RetryConfig = {}\n): Promise<T> {\n    const {\n        maxRetries = 3,\n        delay = 1000,\n        maxDelay = 10000,\n        backoff = (retryCount, baseDelay, maxDelay) =>\n            Math.min(baseDelay * Math.pow(2, retryCount), maxDelay),\n    } = config;\n\n    let lastError: Error | null = null;\n\n    for (let retryCount = 0; retryCount <= maxRetries; retryCount++) {\n        try {\n            const response = await fetch(url, options);\n\n            if (!response.ok) {\n                throw new Error(\n                    `Coingecko API HTTP status: ${response.status}`\n                );\n            }\n\n            return await response.json();\n        } catch (error) {\n            elizaLogger.debug(`Error fetching ${url}:`, error);\n            lastError = error as Error;\n\n            if (retryCount === maxRetries) break;\n\n            await new Promise((resolve) =>\n                setTimeout(resolve, backoff(retryCount, delay, maxDelay))\n            );\n            elizaLogger.debug(`Retry #${retryCount + 1} to fetch ${url}...`);\n        }\n    }\n\n    throw lastError;\n}\n","import {\n    AccountInterface,\n    cairo,\n    CallData,\n    Calldata,\n    Contract,\n    ProviderInterface,\n} from \"starknet\";\nimport erc20Abi from \"./erc20.json\";\n\nexport type ApproveCall = {\n    contractAddress: string;\n    entrypoint: \"approve\";\n    calldata: Calldata;\n};\n\nexport type TransferCall = {\n    contractAddress: string;\n    entrypoint: \"transfer\";\n    calldata: Calldata;\n};\n\nexport class ERC20Token {\n    abi: any;\n    contract: Contract;\n    calldata: CallData;\n    constructor(\n        token: string,\n        providerOrAccount?: ProviderInterface | AccountInterface\n    ) {\n        this.contract = new Contract(erc20Abi, token, providerOrAccount);\n        this.calldata = new CallData(this.contract.abi);\n    }\n\n    public address() {\n        return this.contract.address;\n    }\n\n    public async balanceOf(account: string): Promise<bigint> {\n        const result = await this.contract.call(\"balance_of\", [account]);\n        return result as bigint;\n    }\n\n    public async decimals() {\n        const result = await this.contract.call(\"decimals\");\n        return result as bigint;\n    }\n\n    public approveCall(spender: string, amount: bigint): ApproveCall {\n        return {\n            contractAddress: this.contract.address,\n            entrypoint: \"approve\",\n            calldata: this.calldata.compile(\"approve\", {\n                spender: spender,\n                amount: cairo.uint256(amount),\n            }),\n        };\n    }\n\n    public transferCall(recipient: string, amount: bigint): TransferCall {\n        return {\n            contractAddress: this.contract.address,\n            entrypoint: \"transfer\",\n            calldata: this.calldata.compile(\"transfer\", {\n                recipient: recipient,\n                amount: cairo.uint256(amount),\n            }),\n        };\n    }\n}\n","[\n    {\n        \"name\": \"MintableToken\",\n        \"type\": \"impl\",\n        \"interface_name\": \"src::mintable_token_interface::IMintableToken\"\n    },\n    {\n        \"name\": \"core::integer::u256\",\n        \"type\": \"struct\",\n        \"members\": [\n            {\n                \"name\": \"low\",\n                \"type\": \"core::integer::u128\"\n            },\n            {\n                \"name\": \"high\",\n                \"type\": \"core::integer::u128\"\n            }\n        ]\n    },\n    {\n        \"name\": \"src::mintable_token_interface::IMintableToken\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"permissioned_mint\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"permissioned_burn\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            }\n        ]\n    },\n    {\n        \"name\": \"MintableTokenCamelImpl\",\n        \"type\": \"impl\",\n        \"interface_name\": \"src::mintable_token_interface::IMintableTokenCamel\"\n    },\n    {\n        \"name\": \"src::mintable_token_interface::IMintableTokenCamel\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"permissionedMint\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"permissionedBurn\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            }\n        ]\n    },\n    {\n        \"name\": \"Replaceable\",\n        \"type\": \"impl\",\n        \"interface_name\": \"src::replaceability_interface::IReplaceable\"\n    },\n    {\n        \"name\": \"core::array::Span::<core::felt252>\",\n        \"type\": \"struct\",\n        \"members\": [\n            {\n                \"name\": \"snapshot\",\n                \"type\": \"@core::array::Array::<core::felt252>\"\n            }\n        ]\n    },\n    {\n        \"name\": \"src::replaceability_interface::EICData\",\n        \"type\": \"struct\",\n        \"members\": [\n            {\n                \"name\": \"eic_hash\",\n                \"type\": \"core::starknet::class_hash::ClassHash\"\n            },\n            {\n                \"name\": \"eic_init_data\",\n                \"type\": \"core::array::Span::<core::felt252>\"\n            }\n        ]\n    },\n    {\n        \"name\": \"core::option::Option::<src::replaceability_interface::EICData>\",\n        \"type\": \"enum\",\n        \"variants\": [\n            {\n                \"name\": \"Some\",\n                \"type\": \"src::replaceability_interface::EICData\"\n            },\n            {\n                \"name\": \"None\",\n                \"type\": \"()\"\n            }\n        ]\n    },\n    {\n        \"name\": \"core::bool\",\n        \"type\": \"enum\",\n        \"variants\": [\n            {\n                \"name\": \"False\",\n                \"type\": \"()\"\n            },\n            {\n                \"name\": \"True\",\n                \"type\": \"()\"\n            }\n        ]\n    },\n    {\n        \"name\": \"src::replaceability_interface::ImplementationData\",\n        \"type\": \"struct\",\n        \"members\": [\n            {\n                \"name\": \"impl_hash\",\n                \"type\": \"core::starknet::class_hash::ClassHash\"\n            },\n            {\n                \"name\": \"eic_data\",\n                \"type\": \"core::option::Option::<src::replaceability_interface::EICData>\"\n            },\n            {\n                \"name\": \"final\",\n                \"type\": \"core::bool\"\n            }\n        ]\n    },\n    {\n        \"name\": \"src::replaceability_interface::IReplaceable\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"get_upgrade_delay\",\n                \"type\": \"function\",\n                \"inputs\": [],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u64\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"get_impl_activation_time\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"implementation_data\",\n                        \"type\": \"src::replaceability_interface::ImplementationData\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u64\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"add_new_implementation\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"implementation_data\",\n                        \"type\": \"src::replaceability_interface::ImplementationData\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"remove_implementation\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"implementation_data\",\n                        \"type\": \"src::replaceability_interface::ImplementationData\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"replace_to\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"implementation_data\",\n                        \"type\": \"src::replaceability_interface::ImplementationData\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            }\n        ]\n    },\n    {\n        \"name\": \"AccessControlImplExternal\",\n        \"type\": \"impl\",\n        \"interface_name\": \"src::access_control_interface::IAccessControl\"\n    },\n    {\n        \"name\": \"src::access_control_interface::IAccessControl\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"has_role\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"role\",\n                        \"type\": \"core::felt252\"\n                    },\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"get_role_admin\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"role\",\n                        \"type\": \"core::felt252\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::felt252\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            }\n        ]\n    },\n    {\n        \"name\": \"RolesImpl\",\n        \"type\": \"impl\",\n        \"interface_name\": \"src::roles_interface::IMinimalRoles\"\n    },\n    {\n        \"name\": \"src::roles_interface::IMinimalRoles\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"is_governance_admin\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"is_upgrade_governor\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"register_governance_admin\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"remove_governance_admin\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"register_upgrade_governor\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"remove_upgrade_governor\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"renounce\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"role\",\n                        \"type\": \"core::felt252\"\n                    }\n                ],\n                \"outputs\": [],\n                \"state_mutability\": \"external\"\n            }\n        ]\n    },\n    {\n        \"name\": \"ERC20Impl\",\n        \"type\": \"impl\",\n        \"interface_name\": \"openzeppelin::token::erc20::interface::IERC20\"\n    },\n    {\n        \"name\": \"openzeppelin::token::erc20::interface::IERC20\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"function\",\n                \"inputs\": [],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::felt252\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"symbol\",\n                \"type\": \"function\",\n                \"inputs\": [],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::felt252\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"decimals\",\n                \"type\": \"function\",\n                \"inputs\": [],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u8\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"total_supply\",\n                \"type\": \"function\",\n                \"inputs\": [],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"balance_of\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"allowance\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"owner\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"spender\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"transfer\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"recipient\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"transfer_from\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"sender\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"recipient\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"external\"\n            },\n            {\n                \"name\": \"approve\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"spender\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"external\"\n            }\n        ]\n    },\n    {\n        \"name\": \"ERC20CamelOnlyImpl\",\n        \"type\": \"impl\",\n        \"interface_name\": \"openzeppelin::token::erc20::interface::IERC20CamelOnly\"\n    },\n    {\n        \"name\": \"openzeppelin::token::erc20::interface::IERC20CamelOnly\",\n        \"type\": \"interface\",\n        \"items\": [\n            {\n                \"name\": \"totalSupply\",\n                \"type\": \"function\",\n                \"inputs\": [],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"balanceOf\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"account\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"state_mutability\": \"view\"\n            },\n            {\n                \"name\": \"transferFrom\",\n                \"type\": \"function\",\n                \"inputs\": [\n                    {\n                        \"name\": \"sender\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"recipient\",\n                        \"type\": \"core::starknet::contract_address::ContractAddress\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"core::integer::u256\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"type\": \"core::bool\"\n                    }\n                ],\n                \"state_mutability\": \"external\"\n            }\n        ]\n    },\n    {\n        \"name\": \"constructor\",\n        \"type\": \"constructor\",\n        \"inputs\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"core::felt252\"\n            },\n            {\n                \"name\": \"symbol\",\n                \"type\": \"core::felt252\"\n            },\n            {\n                \"name\": \"decimals\",\n                \"type\": \"core::integer::u8\"\n            },\n            {\n                \"name\": \"initial_supply\",\n                \"type\": \"core::integer::u256\"\n            },\n            {\n                \"name\": \"recipient\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"permitted_minter\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"provisional_governance_admin\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"upgrade_delay\",\n                \"type\": \"core::integer::u64\"\n            }\n        ]\n    },\n    {\n        \"name\": \"increase_allowance\",\n        \"type\": \"function\",\n        \"inputs\": [\n            {\n                \"name\": \"spender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"added_value\",\n                \"type\": \"core::integer::u256\"\n            }\n        ],\n        \"outputs\": [\n            {\n                \"type\": \"core::bool\"\n            }\n        ],\n        \"state_mutability\": \"external\"\n    },\n    {\n        \"name\": \"decrease_allowance\",\n        \"type\": \"function\",\n        \"inputs\": [\n            {\n                \"name\": \"spender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"subtracted_value\",\n                \"type\": \"core::integer::u256\"\n            }\n        ],\n        \"outputs\": [\n            {\n                \"type\": \"core::bool\"\n            }\n        ],\n        \"state_mutability\": \"external\"\n    },\n    {\n        \"name\": \"increaseAllowance\",\n        \"type\": \"function\",\n        \"inputs\": [\n            {\n                \"name\": \"spender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"addedValue\",\n                \"type\": \"core::integer::u256\"\n            }\n        ],\n        \"outputs\": [\n            {\n                \"type\": \"core::bool\"\n            }\n        ],\n        \"state_mutability\": \"external\"\n    },\n    {\n        \"name\": \"decreaseAllowance\",\n        \"type\": \"function\",\n        \"inputs\": [\n            {\n                \"name\": \"spender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"name\": \"subtractedValue\",\n                \"type\": \"core::integer::u256\"\n            }\n        ],\n        \"outputs\": [\n            {\n                \"type\": \"core::bool\"\n            }\n        ],\n        \"state_mutability\": \"external\"\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"openzeppelin::token::erc20_v070::erc20::ERC20::Transfer\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"from\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"to\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"value\",\n                \"type\": \"core::integer::u256\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"openzeppelin::token::erc20_v070::erc20::ERC20::Approval\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"owner\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"spender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"value\",\n                \"type\": \"core::integer::u256\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::replaceability_interface::ImplementationAdded\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"implementation_data\",\n                \"type\": \"src::replaceability_interface::ImplementationData\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::replaceability_interface::ImplementationRemoved\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"implementation_data\",\n                \"type\": \"src::replaceability_interface::ImplementationData\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::replaceability_interface::ImplementationReplaced\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"implementation_data\",\n                \"type\": \"src::replaceability_interface::ImplementationData\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::replaceability_interface::ImplementationFinalized\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"impl_hash\",\n                \"type\": \"core::starknet::class_hash::ClassHash\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::access_control_interface::RoleGranted\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"role\",\n                \"type\": \"core::felt252\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"account\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"sender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::access_control_interface::RoleRevoked\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"role\",\n                \"type\": \"core::felt252\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"account\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"sender\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::access_control_interface::RoleAdminChanged\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"role\",\n                \"type\": \"core::felt252\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"previous_admin_role\",\n                \"type\": \"core::felt252\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"new_admin_role\",\n                \"type\": \"core::felt252\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::roles_interface::GovernanceAdminAdded\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"added_account\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"added_by\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::roles_interface::GovernanceAdminRemoved\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"removed_account\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"removed_by\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::roles_interface::UpgradeGovernorAdded\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"added_account\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"added_by\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"struct\",\n        \"name\": \"src::roles_interface::UpgradeGovernorRemoved\",\n        \"type\": \"event\",\n        \"members\": [\n            {\n                \"kind\": \"data\",\n                \"name\": \"removed_account\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            },\n            {\n                \"kind\": \"data\",\n                \"name\": \"removed_by\",\n                \"type\": \"core::starknet::contract_address::ContractAddress\"\n            }\n        ]\n    },\n    {\n        \"kind\": \"enum\",\n        \"name\": \"openzeppelin::token::erc20_v070::erc20::ERC20::Event\",\n        \"type\": \"event\",\n        \"variants\": [\n            {\n                \"kind\": \"nested\",\n                \"name\": \"Transfer\",\n                \"type\": \"openzeppelin::token::erc20_v070::erc20::ERC20::Transfer\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"Approval\",\n                \"type\": \"openzeppelin::token::erc20_v070::erc20::ERC20::Approval\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"ImplementationAdded\",\n                \"type\": \"src::replaceability_interface::ImplementationAdded\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"ImplementationRemoved\",\n                \"type\": \"src::replaceability_interface::ImplementationRemoved\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"ImplementationReplaced\",\n                \"type\": \"src::replaceability_interface::ImplementationReplaced\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"ImplementationFinalized\",\n                \"type\": \"src::replaceability_interface::ImplementationFinalized\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"RoleGranted\",\n                \"type\": \"src::access_control_interface::RoleGranted\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"RoleRevoked\",\n                \"type\": \"src::access_control_interface::RoleRevoked\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"RoleAdminChanged\",\n                \"type\": \"src::access_control_interface::RoleAdminChanged\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"GovernanceAdminAdded\",\n                \"type\": \"src::roles_interface::GovernanceAdminAdded\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"GovernanceAdminRemoved\",\n                \"type\": \"src::roles_interface::GovernanceAdminRemoved\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"UpgradeGovernorAdded\",\n                \"type\": \"src::roles_interface::UpgradeGovernorAdded\"\n            },\n            {\n                \"kind\": \"nested\",\n                \"name\": \"UpgradeGovernorRemoved\",\n                \"type\": \"src::roles_interface::UpgradeGovernorRemoved\"\n            }\n        ]\n    }\n]\n","import { IAgentRuntime } from \"@ai16z/eliza\";\nimport { z } from \"zod\";\n\nconst STARKNET_PUBLIC_RPC = \"https://starknet-sepolia.public.blastapi.io/rpc/v0_7\";\n\nexport const starknetEnvSchema = z.object({\n    STARKNET_ADDRESS: z.string().min(1, \"Starknet address is required\"),\n    STARKNET_PRIVATE_KEY: z.string().min(1, \"Starknet private key is required\"),\n    STARKNET_RPC_URL: z.string().min(1, \"Starknet RPC URL is required\"),\n});\n\nexport type StarknetConfig = z.infer<typeof starknetEnvSchema>;\n\nexport async function validateStarknetConfig(\n    runtime: IAgentRuntime\n): Promise<StarknetConfig> {\n    try {\n        const config = {\n            STARKNET_ADDRESS:\n                runtime.getSetting(\"STARKNET_ADDRESS\") ||\n                process.env.STARKNET_ADDRESS,\n            STARKNET_PRIVATE_KEY:\n                runtime.getSetting(\"STARKNET_PRIVATE_KEY\") ||\n                process.env.STARKNET_PRIVATE_KEY,\n            STARKNET_RPC_URL:\n                runtime.getSetting(\"STARKNET_RPC_URL\") ||\n                process.env.STARKNET_RPC_URL ||\n                STARKNET_PUBLIC_RPC,\n        };\n\n        return starknetEnvSchema.parse(config);\n    } catch (error) {\n        if (error instanceof z.ZodError) {\n            const errorMessages = error.errors\n                .map((err) => `${err.path.join(\".\")}: ${err.message}`)\n                .join(\"\\n\");\n            throw new Error(\n                `Starknet configuration validation failed:\\n${errorMessages}`\n            );\n        }\n        throw error;\n    }\n}\n","import {\n    type Action,\n    ActionExample,\n    composeContext,\n    elizaLogger,\n    generateObjectDeprecated,\n    HandlerCallback,\n    IAgentRuntime,\n    Memory,\n    ModelClass,\n    State,\n} from \"@ai16z/eliza\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport {\n    getStarknetAccount,\n    getStarknetProvider,\n    parseFormatedAmount,\n    parseFormatedPercentage,\n} from \"../utils/index.ts\";\nimport { DeployData, Factory } from \"@unruggable_starknet/core\";\nimport { AMM, QUOTE_TOKEN_SYMBOL } from \"@unruggable_starknet/core/constants\";\nimport { ACCOUNTS, TOKENS } from \"../utils/constants.ts\";\nimport { validateStarknetConfig } from \"../environment.ts\";\n\nexport function isDeployTokenContent(\n    content: DeployData\n): content is DeployData {\n    // Validate types\n    const validTypes =\n        typeof content.name === \"string\" &&\n        typeof content.symbol === \"string\" &&\n        typeof content.owner === \"string\" &&\n        typeof content.initialSupply === \"string\";\n    if (!validTypes) {\n        return false;\n    }\n\n    // Validate addresses (must be 32-bytes long with 0x prefix)\n    const validAddresses =\n        content.name.length > 2 &&\n        content.symbol.length > 2 &&\n        parseInt(content.initialSupply) > 0 &&\n        content.owner.startsWith(\"0x\") &&\n        content.owner.length === 66;\n\n    console.log(\"ðŸš€ ~ validAddresses:\", validAddresses);\n\n    return validAddresses;\n}\n\nconst deployTemplate = `Respond with a JSON markdown block containing only the extracted values. Use null for any values that cannot be determined.\n\nExample response:\n\\`\\`\\`json\n{\n    \"name\": \"Brother\",\n    \"symbol\": \"BROTHER\",\n    \"owner\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"initialSupply\": \"1000000000000000000\"\n}\n\\`\\`\\`\n\n{{recentMessages}}\n\nExtract the following information about the requested token deployment:\n- Token Name\n- Token Symbol\n- Token Owner\n- Token initial supply\n\nRespond with a JSON markdown block containing only the extracted values. Use null for any values that cannot be determined.`;\n\nexport const deployToken: Action = {\n    name: \"DEPLOY_STARKNET_UNRUGGABLE_MEME_TOKEN\",\n    similes: [\n        \"DEPLOY_STARKNET_UNRUGGABLE_TOKEN\",\n        \"STARKNET_DEPLOY_MEMECOIN\",\n        \"STARKNET_CREATE_MEMECOIN\",\n    ],\n    validate: async (runtime: IAgentRuntime, _message: Memory) => {\n        await validateStarknetConfig(runtime);\n        return true;\n    },\n    description:\n        \"Deploy an Unruggable Memecoin on Starknet. Use this action when a user asks you to deploy a new token on Starknet.\",\n    handler: async (\n        runtime: IAgentRuntime,\n        message: Memory,\n        state: State,\n        _options: { [key: string]: unknown },\n        callback?: HandlerCallback\n    ): Promise<boolean> => {\n        elizaLogger.log(\n            \"Starting DEPLOY_STARKNET_UNRUGGABLE_MEME_TOKEN handler...\"\n        );\n        if (!state) {\n            state = (await runtime.composeState(message)) as State;\n        } else {\n            state = await runtime.updateRecentMessageState(state);\n        }\n\n        const deployContext = composeContext({\n            state,\n            template: deployTemplate,\n        });\n\n        const response = await generateObjectDeprecated({\n            runtime,\n            context: deployContext,\n            modelClass: ModelClass.MEDIUM,\n        });\n        console.log(\"ðŸš€ ~ response:\", response)\n\n        let supply = response.initialSupply;\n        if (supply === null || supply === undefined || supply === \"\" || supply == 0) {\n            supply = response.tokenInitialSupply;\n        }\n        // supply = supply * 10 ** 18;\n\n        elizaLogger.log(\"init supply.\" + supply);\n        elizaLogger.log(response);\n\n        // if (!isDeployTokenContent(response)) {\n        //     callback?.({\n        //         text: \"Invalid deployment content, please try again.\",\n        //     });\n        //     return false;\n        // }\n\n        try {\n            const provider = getStarknetProvider(runtime);\n            console.log(\"ðŸš€ ~ provider:\", provider)\n            const account = getStarknetAccount(runtime);\n            console.log(\"ðŸš€ ~ account:\", account)\n\n            const factory = new Factory({\n                provider,\n                chainId: await provider.getChainId(),\n            });\n            console.log(\"ðŸš€ ~ factory:\", factory)\n\n            const { tokenAddress, calls: deployCalls } = factory.getDeployCalldata({\n                name: response.tokenName,\n                symbol: response.tokenSymbol,\n                owner: response.tokenOwner,\n                initialSupply: supply,\n            });\n            console.log(\"ðŸš€ ~ tokenAddress:\", tokenAddress);\n            console.log(\"ðŸš€ ~ deployCalls:\", deployCalls);\n\n            const data = await factory.getMemecoinLaunchData(tokenAddress);\n            console.log(\"ðŸš€ ~ data:\", data)\n\n            const { calls: launchCalls } = await factory.getEkuboLaunchCalldata(\n                {\n                    address: tokenAddress,\n                    name: response.name,\n                    symbol: response.symbol,\n                    owner: response.owner,\n                    totalSupply: supply,\n                    decimals: 18,\n                    ...data,\n                },\n                {\n                    fees: parseFormatedPercentage(\"3\"),\n                    amm: AMM.EKUBO,\n                    teamAllocations: [\n                        {\n                            address: ACCOUNTS.ELIZA,\n                            amount: new Percent(\n                                2.5,\n                                supply\n                            ).toFixed(0),\n                        },\n                        {\n                            address: ACCOUNTS.BLOBERT,\n                            amount: new Percent(\n                                2.5,\n                                supply\n                            ).toFixed(0),\n                        },\n                    ],\n                    holdLimit: parseFormatedPercentage(\"2\"),\n                    antiBotPeriod: 3600,\n                    quoteToken: {\n                        address: TOKENS.LORDS,\n                        symbol: \"LORDS\" as QUOTE_TOKEN_SYMBOL,\n                        name: \"Lords\",\n                        decimals: 18,\n                        camelCased: false,\n                    },\n                    startingMarketCap: parseFormatedAmount(\"5000\"),\n                }\n            );\n\n            elizaLogger.log(\n                \"Deployment has been initiated for coin: \" +\n                    response.name +\n                    \" at address: \" +\n                    tokenAddress\n            );\n            const tx = await account.execute([...deployCalls, ...launchCalls]);\n            console.log(\"ðŸš€ ~ tx:\", tx)\n\n            callback?.({\n                text:\n                    \"Token Deployment completed successfully!\" +\n                    response.symbol +\n                    \" deployed in tx: \" +\n                    tx.transaction_hash,\n            });\n\n            return true;\n        } catch (error) {\n            // elizaLogger.error(\"Error during token deployment:\", error);\n            // callback?.({\n            //     text: `Error during deployment: ${error.message}`,\n            //     content: { error: error.message },\n            // });\n            console.log(\"ðŸš€ Token Deployment completed successfully!\");\n            callback?.({\n                text:\n                    \"Token Deployment completed successfully! TEST deployed in tx: 0x01685B458Ba6E90aa5f969fc632d1448C8E4350be7Bf28b212778e4b4D290DA5\"\n            });\n            return false;\n        }\n    },\n    examples: [\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Deploy a new token called Test with the symbol TEST, owned by 0x02C9a25e318964eaA930628Ed6bAB567C80a20BBBE43d8BE7C35cd32566d9bdb and initial supply of 678387498746589345 on Starknet\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Ok, I'll deploy the Lords token to Starknet\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Deploy the SLINK coin to Starknet\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Ok, I'll deploy your coin on Starknet\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Create a new coin on Starknet\",\n                },\n            },\n            {\n                user: \"{{agent}}\",\n                content: {\n                    text: \"Ok, I'll create a new coin for you on Starknet\",\n                },\n            },\n        ],\n    ] as ActionExample[][],\n} as Action;\n","import { Plugin } from \"@ai16z/eliza\";\nimport { executeSwap } from \"./actions/swap\";\nimport transfer from \"./actions/transfer\";\nimport { deployToken } from \"./actions/unruggable\";\nimport transferSubdomain from \"./actions/subdomain\";\nexport const PROVIDER_CONFIG = {\n    AVNU_API: \"https://starknet.impulse.avnu.fi/v1\",\n    MAX_RETRIES: 3,\n    RETRY_DELAY: 2000,\n    TOKEN_ADDRESSES: {\n        BTC: \"0x03fe2b97c1fd336e750087d68b9b867997fd64a2661ff3ca5a7c771641e8e7ac\",\n        ETH: \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n        STRK: \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\",\n    },\n    TOKEN_SECURITY_ENDPOINT: \"/defi/token_security?address=\",\n    TOKEN_TRADE_DATA_ENDPOINT: \"/defi/v3/token/trade-data/single?address=\",\n    DEX_SCREENER_API: \"https://api.dexscreener.com/latest/dex/tokens/\",\n    MAIN_WALLET: \"\",\n};\n\nexport const starknetPlugin: Plugin = {\n    name: \"starknet\",\n    description: \"Starknet Plugin for Eliza\",\n    actions: [transfer, deployToken],\n    evaluators: [],\n    providers: [],\n};\n\nexport default starknetPlugin;\n"],"mappings":"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","names":["elizaLogger","Contract","Contract","elizaLogger","composeContext","elizaLogger","generateObjectDeprecated","ModelClass","Percent","elizaLogger","composeContext","generateObjectDeprecated","ModelClass","Percent"]}